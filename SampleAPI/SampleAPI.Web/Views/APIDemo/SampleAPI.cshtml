@model APIDemoViewModel

@{
    var linkGroups = Model.APIProfileServices.GroupBy(item => item.APIService.Name);
    var asyncTestLinks = linkGroups.FirstOrDefault(group => "AsyncTest".Equals(group.Key, StringComparison.OrdinalIgnoreCase))?
                                   .Select(item => new
                                   {
                                       item.APIProfile.Name,
                                       item.APIProfile.Id,
                                       NumberOfTasks = item.GetServiceDefinedFields().GetField("NumberOfTasks").GetIntValue()
                                   })
                                   .Select(item => new SelectListItem()
                                   {
                                       Text = $"{item.Name} [Task Count: {item.NumberOfTasks}]",
                                       Value = $"{item.Id}:{item.NumberOfTasks}"
                                   }) ?? Enumerable.Empty<SelectListItem>();
}

<div class="row h-100">
    <div class="col-3 border-right">
        <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist">
            <a class="nav-link active" id="v-pills-async-test-tab" data-toggle="pill" href="#v-pills-async-test" role="tab">Async Test</a>
        </div>
    </div>
    <div class="col-9">
        <div class="tab-content" id="v-pills-async-test">
            <div class="tab-pane fade show active" role="tabpanel">
                <div class="row">
                    <div class="col-4 border-right">
                        <h6>Async Test</h6>
                        <hr />
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                <span class="input-group-text">API Profile</span>
                            </div>
                            @Html.DropDownList(nameof(APIProfileService), asyncTestLinks, "Select a profile...", new { @class = "form-control", id = $"ddl{nameof(APIProfileService)}_AsyncTestProfile" })
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" onclick="runAsyncTest(this)"><i class="fa fa-upload"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="col-8">
                        <div class="input-group">
                            <textarea class="form-control" id="txtAsyncTestResults" readonly="readonly"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>