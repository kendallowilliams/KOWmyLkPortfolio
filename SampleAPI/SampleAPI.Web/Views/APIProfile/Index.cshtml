@model APIProfileViewModel

@{
    var profileGroups = Model.APIProfiles.GroupBy(profile => profile.Name.Substring(0, 1), StringComparer.OrdinalIgnoreCase);
    int firstProfileId = profileGroups.Any() ? profileGroups.FirstOrDefault().FirstOrDefault().Id : -1,
        selectedId = Model.SelectedProfileId.HasValue ? Model.SelectedProfileId.Value : firstProfileId;

    ViewBag.Title = "API Profiles";
}

<div class="row" style="flex: 1 1 auto">
    <div class="col-3 border-right">
        <div class="d-flex flex-row">
            <h5 style="flex: 1 1 auto">API Profiles</h5>
            <button type="button" class="btn btn-outline-primary btn-sm" data-target="#addAPIProfileModal" data-toggle="modal"><i class="fa fa-plus"></i></button>
        </div>
        <hr />
        <div id="accordion">
            @foreach (var group in profileGroups)
            {
                <div class="card">
                    <div class="card-header m-0 p-0">
                        <button class="btn btn-link py-0" data-toggle="collapse" data-target="#collapse-@(nameof(APIProfile))-@(group.Key)">@(group.Key.ToUpper())...</button>
                    </div>
                    <div id="collapse-@(nameof(APIProfile))-@(group.Key)" class="collapse show" data-parent="#accordion">
                        <div class="card-body m-0 p-0">
                            <div class="list-group list-group-flush py-0">
                                @foreach (APIProfile profile in group.OrderBy(item => item.Name, StringComparer.OrdinalIgnoreCase))
                                {
                                    <button type="button" class="list-group-item list-group-item-action py-0" data-profile-id="@(profile.Id)"
                                            onclick="loadProfile(@(profile.Id))">
                                        @(profile.Name)
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-9 d-flex flex-column" id="profileContainer">
    </div>
</div>

@section scripts {
    <script type="text/javascript" defer="defer">
        function loadProfile(id) {
            showLoading();
            $('button[data-profile-id]').removeClass('active').filter('[data-profile-id="' + id + '"]').addClass('active');
            $('#profileContainer').html('');
            $("#profileContainer").load('@Url.Action(nameof(APIProfileController.APIProfile), "APIProfile")?id=' + id, () => {
                hideLoading();
                loadServices(id);
                loadAccessLogs(id, @(APIProfileViewModel.LogDays.First()));
            });
        }

        function deleteAPIProfile(id) {
            if (window.confirm('Please confirm you want to delete this profile...')) {
                showLoading();
                $.post('@(Url.Action(nameof(APIProfileController.DeleteAPIProfile), "APIProfile"))', { profileId: id }, () => {
                    window.location = '@(Url.Action(nameof(APIProfileController.Index), "APIProfile"))';
                });
            }
        }

        // Profile Services ---------------------------------------------------------------------------------
        function addProfileService(profileId, serviceId) {
            if (profileId && serviceId) {
                showLoading();
                $.post('@Url.Action(nameof(APIProfileController.AddProfileService), "APIProfile")', { profileId: profileId, serviceId: serviceId }, () => {
                    hideLoading();
                    loadProfile(profileId);
                });
            }
        }

        function removeProfileService(profileId, profileServiceId) {
            if (profileId && profileServiceId) {
                showLoading();
                $.post('@Url.Action(nameof(APIProfileController.RemoveProfileService), "APIProfile")', { profileServiceId: profileServiceId }, () => {
                    hideLoading();
                    loadProfile(profileId);
                });
            }
        }

        function loadServices(profileId) {
            loadActiveServices(profileId);
            loadInactiveServices(profileId);
        }

        function loadActiveServices(profileId) {
            const $container = $('#activeServicesContainer');

            if ($container.length > 0) {
                showLoading();
                $container.html('');
                $container.load('@Url.Action(nameof(APIProfileController.ActiveServices), "APIProfile")?profileId=' + profileId, () => {
                    hideLoading();
                });
            }
        }

        function loadInactiveServices(profileId) {
            const $container = $('#inactiveServicesContainer');

            if ($container.length > 0) {
                showLoading();
                $container.html('');
                $container.load('@Url.Action(nameof(APIProfileController.InactiveServices), "APIProfile")?profileId=' + profileId, () => {
                    hideLoading();
                });
            }
        }

        // End Profile Services -----------------------------------------------------------------------------

        // Access Logs --------------------------------------------------------------------------------------

        function loadAccessLogs(profileId, days) {
            const $container = $('#access-logs'),
                data = 'profileId=' + profileId + '&days=' + days;

            if ($container.length > 0) {
                showLoading();
                $container.html('');
                $container.load('@Url.Action(nameof(APIProfileController.APIAccessLogs), "APIProfile")?' + data, () => {
                    hideLoading();
                });
            }
        }

        // End Access Logs ----------------------------------------------------------------------------------

        $(function () {
            loadProfile(@(selectedId));
        });
    </script>
} 